import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("==================================================");
            System.out.println("¿QUE DESEA HACER?:");
            System.out.println("1. Método de Bisección");
            System.out.println("2. Calcular Sesgo");
            System.out.println("3. Salir");

            int opcion = scanner.nextInt();
            scanner.nextLine(); 

            switch (opcion) {
                case 1:
                    resolverBiseccion(scanner);
                    break;
                case 2:
                    calcularSesgo(scanner);
                    break;
                case 3:
                    System.out.println("¡Hasta luego!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Opción inválida. Inténtelo de nuevo.");
            }
        }
    }

    public static void resolverBiseccion(Scanner scanner) {
        
        System.out.println("Ingrese la función (por ejemplo: x^2-5*x+6): ");
        String funcion = scanner.nextLine();

        System.out.println("Ingrese el extremo izquierdo del intervalo (a): ");
        double a = scanner.nextDouble();

        System.out.println("Ingrese el extremo derecho del intervalo (b): ");
        double b = scanner.nextDouble();

        System.out.println("Ingrese el número de iteraciones: ");
        int iteraciones = scanner.nextInt();

        System.out.println("Ingrese el error mínimo: ");
        double tolerancia = scanner.nextDouble();

        
        Biseccion.biseccion(a, b, iteraciones, tolerancia);
    }

    public static void calcularSesgo(Scanner scanner) {
        
        System.out.println("Ingrese la cantidad de números:");
        int cantidadNumeros = scanner.nextInt();
        scanner.nextLine(); // Consumir el salto de línea pendiente

        double[] datos = new double[cantidadNumeros];

        System.out.println("Ingrese los números uno por uno:");

        for (int i = 0; i < cantidadNumeros; i++) {
            datos[i] = scanner.nextDouble();
        }

       
        double sesgo = Sesgo1.calcularSesgo(datos);
        System.out.println("El sesgo de los datos es: " + sesgo);
    }
}

class Biseccion {

    
    public static double f(double x) {
        return -2 + 7 * x - 5 * Math.pow(x, 2) + 6 * Math.pow(x, 3);
    }

    
    public static double biseccion(double a, double b, int iteraciones, double tolerancia) {
        double c = 0; 
       
        System.out.println("Iteración\t\tXa\t\tXb\t\tXm\t\tF(Xm)\t\tError");

        
        for (int i = 0; i < iteraciones; i++) {
            c = (a + b) / 2; 

           
            double f_c = f(c);

            
            double error = Math.abs((b - a) / 2);

            
            System.out.printf("%d\t\t\t%.6f\t%.6f\t%.6f\t%.6f\t%.6f\n", i + 1, a, b, c, f_c, error);

            
            if (Math.abs(f_c) < tolerancia) {
                break; 
            } else if (f_c * f(a) < 0) {
                b = c; 
            } else {
                a = c; 
            }
        }

        return c; 
    }
}

class Sesgo1 {

    
    public static double calcularSesgo(double[] datos) {
        int n = datos.length;
        double media = calcularMedia(datos);
        double desviacionEstandar = calcularDesviacionEstandar(datos);
        double suma = 0;

        
        for (double dato : datos) {
            suma += Math.pow((dato - media) / desviacionEstandar, 3);
        }

        
        double sesgo = (n * suma) / ((n - 1) * (n - 2));
        return sesgo;
    }

    
    public static double calcularMedia(double[] datos) {
        double suma = 0;
        for (double dato : datos) {
            suma += dato;
        }
        return suma / datos.length;
    }

   
    public static double calcularDesviacionEstandar(double[] datos) {
        double media = calcularMedia(datos);
        double suma = 0;
        for (double dato : datos) {
            suma += Math.pow(dato - media, 2);
        }
        return Math.sqrt(suma / (datos.length - 1));
    }
}

